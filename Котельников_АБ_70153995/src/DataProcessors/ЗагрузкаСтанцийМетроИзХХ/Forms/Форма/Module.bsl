
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если ТекущийПользователь.ИспользоватьСвоеПриложение Тогда
		ТипИспользуемогоПриложения = Перечисления.ТипыПриложенияХХ.Личное;
		НазваниеПриложенияХХ = ТекущийПользователь.НазваниеПриложенияХХ;
		ПочтаРазработчикаХХ = ТекущийПользователь.ПочтаРазработчикаХХ;
	Иначе
		ТипИспользуемогоПриложения = Перечисления.ТипыПриложенияХХ.Общее;
		НазваниеПриложенияХХ = Константы.НазваниеПриложенияХХ.Получить();
		ПочтаРазработчикаХХ = Константы.ПочтаРазработчикаХХ.Получить();
	КонецЕсли;
			
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыДанныеПользователя" Тогда
		ИспользоватьСвоеПриложение = Источник.Объект.ИспользоватьСвоеПриложение;
		ОбщееПриложение = (ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Общее"));
		СвоеПриложение = (ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Личное"));
		
		Если (СвоеПриложение ИЛИ ОбщееПриложение) И ИспользоватьСвоеПриложение Тогда
			ОбновитьДанныеЛичногоПриложения(Источник);
		ИначеЕсли СвоеПриложение И НЕ ИспользоватьСвоеПриложение Тогда
			ОбновитьДанныеОбщегоПриложения();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтанцииМетроВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОчиститьСообщения();
	
	ВыбраннаяСтанция = Элемент.ТекущиеДанные.Станция;
	ИдентификаторЭлемента = Элемент.ТекущиеДанные.ИдентификаторЭлемента;
	
	Если ПустаяСтрока(ВыбраннаяСтанция)  Тогда
		ВыбраннаяЛиния = Элемент.ТекущиеДанные.Линия;
		ДобавитьЛинию(ВыбраннаяЛиния, ИдентификаторЭлемента, Истина);		
	Иначе
		ВыбраннаяЛиния = Элемент.ТекущиеДанные.ПолучитьРодителя().Линия;
		ИдентификаторЛинии = Элемент.ТекущиеДанные.ПолучитьРодителя().ИдентификаторЭлемента;
		
		ДобавитьСтанцию(ВыбраннаяЛиния, ИдентификаторЛинии, ВыбраннаяСтанция, ИдентификаторЭлемента);
				
		ИдентификаторСтроки = Элементы.СтанцииМетро.ТекущаяСтрока;
		ТекущаяСтрока = СтанцииМетро.НайтиПоИдентификатору(ИдентификаторСтроки);
		СтрокаРодитель = ТекущаяСтрока.ПолучитьРодителя();
		
		Если СтрокаРодитель = Неопределено Тогда
			СтанцииМетро.ПолучитьЭлементы().Удалить(ТекущаяСтрока);
		Иначе
			СтрокаРодитель.ПолучитьЭлементы().Удалить(ТекущаяСтрока);
		КонецЕсли;
		
		ВсегоДоступныхЗначений = ВсегоДоступныхЗначений - 1;
		ОповеститьОбИзменении(Тип("СправочникСсылка.СтанцииМетро"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ЗагрузитьСтанцииМетро(Команда)
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(ТокенПользователя) Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Получите токен");
		Возврат;
	КонецЕсли;
			
	HTTPСоединение = Новый HTTPСоединение("api.hh.ru", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	
	HTTPЗапрос = Новый HTTPЗапрос("/metro/1");
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization", "Bearer " + ТокенПользователя);
	HTTPЗапрос.Заголовки.Вставить("User-Agent", НазваниеПриложенияХХ + " (" + ПочтаРазработчикаХХ + ")");

	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос); 
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось найти станции метро. Код ответа - " + HTTPОтвет.КодСостояния);
			Возврат;
		КонецЕсли;
		
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(HTTPОтвет.ПолучитьТелоКакСтроку(), Истина);
		ОтобразитьСтанцииМетро(ОтветJSON);	
		ОбщегоНазначенияКлиент.ВывестиСообщение("Станции метро успешно загружены");
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());	
	КонецПопытки;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения)

	ОтборПользователя = Новый Структура("Пользователь, ТипПриложения", ПараметрыСеанса.ТекущийПользователь, ТипИспользуемогоПриложения);
	ТокенПользователя = РегистрыСведений.ТокеныПользователей.Получить(ОтборПользователя).Токен;

	Возврат ТокенПользователя; 

КонецФункции

&НаКлиенте
Процедура ОбновитьДанныеЛичногоПриложения(Источник)
	
	ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Личное");
	НазваниеПриложенияХХ = Источник.Объект.НазваниеПриложенияХХ;
	ПочтаРазработчикаХХ = Источник.Объект.ПочтаРазработчикаХХ;
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеОбщегоПриложения()

	ДанныеОбщегоПриложения = ПолучитьДанныеОбщегоПриложения();
	
	ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Общее");
	НазваниеПриложенияХХ = ДанныеОбщегоПриложения.НазваниеПриложенияХХ;
	ПочтаРазработчикаХХ = ДанныеОбщегоПриложения.ПочтаРазработчикаХХ;
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеОбщегоПриложения()

	ДанныеОбщегоПриложения = Новый Структура;
	ДанныеОбщегоПриложения.Вставить("НазваниеПриложенияХХ", Константы.НазваниеПриложенияХХ.Получить());
	ДанныеОбщегоПриложения.Вставить("ПочтаРазработчикаХХ", Константы.ПочтаРазработчикаХХ.Получить());
	ДанныеОбщегоПриложения.Вставить("ТокенПользователя", ПолучитьАктуальныйТокен(Перечисления.ТипыПриложенияХХ.Общее));
	
	Возврат ДанныеОбщегоПриложения; 

КонецФункции

&НаКлиенте
Процедура ОтобразитьСтанцииМетро(СписокСтанций)

	ОчиститьСообщения();
	СтанцииМетро.ПолучитьЭлементы().Очистить();
	ОтобразитьСтанцииМетроНаСервере(СписокСтанций);
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьСтанцииМетроНаСервере(СписокСтанций)

	ВсегоДоступныхЗначений = 0;
	Для Каждого Линия Из СписокСтанций["lines"] Цикл
		НазваниеЛинии = Линия["name"];
		ИдентификаторЛинии = Линия["id"];
		
		СтрокаЛинияМетро = СтанцииМетро.ПолучитьЭлементы().Добавить();
		СтрокаЛинияМетро.Линия = НазваниеЛинии;
		СтрокаЛинияМетро.ИдентификаторЭлемента = ИдентификаторЛинии;
		ВсегоДоступныхЗначений = ВсегоДоступныхЗначений + 1;
		
		Для Каждого Станция Из Линия["stations"] Цикл
			НазваниеСтанции	= Станция["name"];
			ИдентификаторСтанции = Станция["id"];
			
			СсылкаНаСправочник = Справочники.СтанцииМетро.НайтиПоРеквизиту("ИдентификаторСтанцииХХ", ИдентификаторСтанции); 	
			Если НЕ СсылкаНаСправочник.Пустая() Тогда
				Продолжить;
			КонецЕсли;
				
			СтрокаСтанцияМетро = СтрокаЛинияМетро.ПолучитьЭлементы().Добавить();
			СтрокаСтанцияМетро.Станция = НазваниеСтанции;
			СтрокаСтанцияМетро.ИдентификаторЭлемента = ИдентификаторСтанции;
			ВсегоДоступныхЗначений = ВсегоДоступныхЗначений + 1;			
		КонецЦикла;		
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьЛинию(ВыбраннаяЛиния, ИдентификаторЛинии = "", СообщатьОДубликате = Ложь)

	СсылкаНаГруппу = Справочники.СтанцииМетро.НайтиПоНаименованию(ВыбраннаяЛиния);
	
	Если НЕ СсылкаНаГруппу.Пустая()  Тогда
		Если СообщатьОДубликате Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Такая линия метро уже есть в справочнике";
			Сообщение.Сообщить();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	НоваяГруппаЛиния = Справочники.СтанцииМетро.СоздатьГруппу();
	НоваяГруппаЛиния.Наименование = ВыбраннаяЛиния;
	НоваяГруппаЛиния.ИдентификаторСтанцииХХ = ИдентификаторЛинии;
	НоваяГруппаЛиния.Записать();
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Линия метро успешно добавлена";
	Сообщение.Сообщить();
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьСтанцию(ВыбраннаяЛиния, ИдентификаторЛинии, ВыбраннаяСтанция, ИдентификаторСтанции)

	ДобавитьЛинию(ВыбраннаяЛиния, ИдентификаторЛинии);
	
	СсылкаНаСтанцию = Справочники.СтанцииМетро.НайтиПоРеквизиту("ИдентификаторСтанцииХХ", ИдентификаторСтанции);
	СсылкаНаГруппу = Справочники.СтанцииМетро.НайтиПоНаименованию(ВыбраннаяЛиния);
	Если НЕ СсылкаНаСтанцию.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Такая станция метро уже есть";
		Сообщение.Сообщить();
	    Возврат;
	КонецЕсли; 
	
	НоваяСтанция = Справочники.СтанцииМетро.СоздатьЭлемент();
	НоваяСтанция.Наименование = ВыбраннаяСтанция;
	НоваяСтанция.ИдентификаторСтанцииХХ = ИдентификаторСтанции;
	НоваяСтанция.Родитель = СсылкаНаГруппу;
	НоваяСтанция.Записать();  
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Станция успешно добавлена";
	Сообщение.Сообщить();
	
КонецПроцедуры

#КонецОбласти

