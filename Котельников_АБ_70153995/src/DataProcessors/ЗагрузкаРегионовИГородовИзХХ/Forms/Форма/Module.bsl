
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если ТекущийПользователь.ИспользоватьСвоеПриложение Тогда
		ТипИспользуемогоПриложения = Перечисления.ТипыПриложенияХХ.Личное;
		НазваниеПриложенияХХ = ТекущийПользователь.НазваниеПриложенияХХ;
		ПочтаРазработчикаХХ = ТекущийПользователь.ПочтаРазработчикаХХ;
	Иначе
		ТипИспользуемогоПриложения = Перечисления.ТипыПриложенияХХ.Общее;
		НазваниеПриложенияХХ = Константы.НазваниеПриложенияХХ.Получить();
		ПочтаРазработчикаХХ = Константы.ПочтаРазработчикаХХ.Получить();
	КонецЕсли;
			
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыДанныеПользователя" Тогда
		ИспользоватьСвоеПриложение = Источник.Объект.ИспользоватьСвоеПриложение;
		ОбщееПриложение = (ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Общее"));
		СвоеПриложение = (ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Личное"));
		
		Если (СвоеПриложение ИЛИ ОбщееПриложение) И ИспользоватьСвоеПриложение Тогда
			ОбновитьДанныеЛичногоПриложения(Источник);
		ИначеЕсли СвоеПриложение И НЕ ИспользоватьСвоеПриложение Тогда
			ОбновитьДанныеОбщегоПриложения();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РегионыИГородаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОчиститьСообщения();
	
	ВыбранныйГород = Элемент.ТекущиеДанные.Город;
	ИдентификаторГорода = Элемент.ТекущиеДанные.ИдентификаторЭлемента;
	
	Если ПустаяСтрока(ВыбранныйГород)  Тогда
		ВыбранныйРегион = Элемент.ТекущиеДанные.Регион;
		ДобавитьРегион(ВыбранныйРегион, ИдентификаторГорода, Истина);		
	Иначе
		ВыбранныйРегион = Элемент.ТекущиеДанные.ПолучитьРодителя().Регион;
		ИдентификаторРегиона = Элемент.ТекущиеДанные.ПолучитьРодителя().ИдентификаторЭлемента;
		ДобавитьГород(ВыбранныйРегион, ИдентификаторРегиона, ВыбранныйГород, ИдентификаторГорода);
				
		ИдентификаторСтроки = Элементы.РегионыИГорода.ТекущаяСтрока;
		ТекущаяСтрока = РегионыИГорода.НайтиПоИдентификатору(ИдентификаторСтроки);
		СтрокаРодитель = ТекущаяСтрока.ПолучитьРодителя();
		
		Если СтрокаРодитель = Неопределено Тогда
			РегионыИГорода.ПолучитьЭлементы().Удалить(ТекущаяСтрока);
		Иначе
			СтрокаРодитель.ПолучитьЭлементы().Удалить(ТекущаяСтрока);
		КонецЕсли;
		
		ВсегоДоступныхЗначений = ВсегоДоступныхЗначений - 1;
		ОповеститьОбИзменении(Тип("СправочникСсылка.Города"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ПолучитьРегионы(Команда)

	ОчиститьСообщения();
	
	Если ПустаяСтрока(ТокенПользователя) Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Получите токен");
		Возврат;
	КонецЕсли;
			
	HTTPСоединение = Новый HTTPСоединение("api.hh.ru", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	
	HTTPЗапрос = Новый HTTPЗапрос("/areas/113");
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization", "Bearer " + ТокенПользователя);
	HTTPЗапрос.Заголовки.Вставить("User-Agent", НазваниеПриложенияХХ + " (" + ПочтаРазработчикаХХ + ")");

	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос); 
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось найти регионы и города. Код ответа - " + HTTPОтвет.КодСостояния);
			Возврат;
		КонецЕсли;
		
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(HTTPОтвет.ПолучитьТелоКакСтроку(), Истина);
		ОтобразитьРегионы(ОтветJSON);	
		ОбщегоНазначенияКлиент.ВывестиСообщение("Регионы и города успешно загружены");
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());	
	КонецПопытки;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения)

	ОтборПользователя = Новый Структура("Пользователь, ТипПриложения", ПараметрыСеанса.ТекущийПользователь, ТипИспользуемогоПриложения);
	ТокенПользователя = РегистрыСведений.ТокеныПользователей.Получить(ОтборПользователя).Токен;

	Возврат ТокенПользователя; 

КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьРегион(ВыбранныйРегион, ИдентификаторРегиона = "", СообщатьОДубликате = Ложь)

	СсылкаНаГруппу = Справочники.Города.НайтиПоНаименованию(ВыбранныйРегион) ;
	
	Если НЕ СсылкаНаГруппу.Пустая()  Тогда
		Если СообщатьОДубликате Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Такой регион уже есть в справочнике";
			Сообщение.Сообщить();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	НоваяГруппаРегион = Справочники.Города.СоздатьГруппу();
	НоваяГруппаРегион.Наименование = ВыбранныйРегион;
	НоваяГруппаРегион.ИдентификаторГородаХХ = ИдентификаторРегиона;
	НоваяГруппаРегион.Записать();
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Регион успешно добавлен";
	Сообщение.Сообщить();
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьГород(ВыбранныйРегион, ИдентификаторРегиона, ВыбранныйГород, ИдентификаторГорода)

	ДобавитьРегион(ВыбранныйРегион, ИдентификаторРегиона);
	
	СсылкаНаГород = Справочники.Города.НайтиПоРеквизиту("ИдентификаторГородаХХ", ИдентификаторГорода) ;
	СсылкаНаГруппу = Справочники.Города.НайтиПоНаименованию(ВыбранныйРегион) ;
	Если НЕ СсылкаНаГород.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Такой город уже есть";
		Сообщение.Сообщить();
	    Возврат;
	КонецЕсли; 
	
	НовыйГород = Справочники.Города.СоздатьЭлемент();
	НовыйГород.Наименование = ВыбранныйГород;
	НовыйГород.ИдентификаторГородаХХ = ИдентификаторГорода;
	НовыйГород.Родитель = СсылкаНаГруппу;
	НовыйГород.Записать();  
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Город успешно добавлен";
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьРегионы(СписокРегионов)
	
	ОчиститьСообщения();
	РегионыИГорода.ПолучитьЭлементы().Очистить();	
	ОтобразитьРегионыНаСервере(СписокРегионов);
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьРегионыНаСервере(СписокРегионов)

	ВсегоДоступныхЗначений = 0;
	Для Каждого Регион Из СписокРегионов["areas"] Цикл
		НаименованиеРегиона = Регион["name"];
		ИдентификаторРегиона = Регион["id"];
		
		Если НаименованиеРегиона = "Москва" ИЛИ НаименованиеРегиона = "Санкт-Петербург" Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРегион = РегионыИГорода.ПолучитьЭлементы().Добавить();
		СтрокаРегион.Регион = НаименованиеРегиона;
		СтрокаРегион.ИдентификаторЭлемента = ИдентификаторРегиона;
		ВсегоДоступныхЗначений = ВсегоДоступныхЗначений + 1;
		
		Для Каждого Город Из Регион["areas"] Цикл
			ИндентификаторГорода = Город["id"];
			СсылкаНаСправочник = Справочники.Города.НайтиПоРеквизиту("ИдентификаторГородаХХ", ИндентификаторГорода);
			
			Если НЕ СсылкаНаСправочник.Пустая() Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаГород = СтрокаРегион.ПолучитьЭлементы().Добавить();
			СтрокаГород.Город = Город["name"];	
			СтрокаГород.ИдентификаторЭлемента = ИндентификаторГорода; 					
			ВсегоДоступныхЗначений = ВсегоДоступныхЗначений + 1;			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеЛичногоПриложения(Источник)
	
	ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Личное");
	НазваниеПриложенияХХ = Источник.Объект.НазваниеПриложенияХХ;
	ПочтаРазработчикаХХ = Источник.Объект.ПочтаРазработчикаХХ;
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеОбщегоПриложения()

	ДанныеОбщегоПриложения = ПолучитьДанныеОбщегоПриложения();
	
	ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Общее");
	НазваниеПриложенияХХ = ДанныеОбщегоПриложения.НазваниеПриложенияХХ;
	ПочтаРазработчикаХХ = ДанныеОбщегоПриложения.ПочтаРазработчикаХХ;
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеОбщегоПриложения()

	ДанныеОбщегоПриложения = Новый Структура;
	ДанныеОбщегоПриложения.Вставить("НазваниеПриложенияХХ", Константы.НазваниеПриложенияХХ.Получить());
	ДанныеОбщегоПриложения.Вставить("ПочтаРазработчикаХХ", Константы.ПочтаРазработчикаХХ.Получить());
	ДанныеОбщегоПриложения.Вставить("ТокенПользователя", ПолучитьАктуальныйТокен(Перечисления.ТипыПриложенияХХ.Общее));
	
	Возврат ДанныеОбщегоПриложения; 

КонецФункции

#КонецОбласти
