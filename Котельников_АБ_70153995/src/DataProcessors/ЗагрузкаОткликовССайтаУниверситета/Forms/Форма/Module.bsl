 
 &НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтотОбъект.ВладелецФормы <> Неопределено Тогда
		Вакансия = ЭтотОбъект.ВладелецФормы.Объект.Ссылка;
	КонецЕсли;
	
КонецПроцедуры
 
&НаКлиенте
Асинх Процедура НайтиКандидатов(Команда)
	
	ОчиститьСообщения();
	СписокКандидатов.Очистить();
	
	Если Вакансия.Пустая() Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Выберите вакансию для поиска", "Вакансия");
		Возврат;
	КонецЕсли;
	
	НомерВакансии = СтрРазделить(Вакансия, " ")[1];
	
	HTTPСоединение = Новый HTTPСоединение("localhost", 3000);
	HTTPЗапрос = Новый HTTPЗапрос("/includes/load_responses.php?vacancy_number=" + НомерВакансии);
	HTTPЗапрос.Заголовки.Вставить("Application", "1C_recruitment");
	
	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос);
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось загрузить отлкики с сайта университета. Код ответа - " + HTTPОтвет.КодСостояния);
			Возврат;
		КонецЕсли;
		
		Результат = HTTPОтвет.ПолучитьТелоКакСтроку(); 	
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(Результат);
		
		ЗагрузитьКандитовВТЗ(ОтветJSON);	
		ОбщегоНазначенияКлиент.ВывестиСообщение("Поиск кандидатов на вакансию """ + Строка(Вакансия) + """ - завершен.");		
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры 

&НаКлиенте
Процедура ЗагрузитьКандитовВТЗ(ОткликиКандидатов) 
	
	КоличествоОткликов = 0;
	ТекДата = ТекущаяДата();

	Для Каждого Кандидат Из ОткликиКандидатов Цикл
		
		Если НЕ Образование.Пустая() И Кандидат.education <> Строка(Образование) Тогда	
			Продолжить;
		КонецЕсли;
		
		Если ПрикрепленоФото И ПустаяСтрока(Кандидат.photo_extension) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если ПрикрепленоРезюме И ПустаяСтрока(Кандидат.resume_extension) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОжидаемаяЗарплатаДо <> 0 И Число(Кандидат.salary) > ОжидаемаяЗарплатаДо Тогда
			Продолжить;	
		КонецЕсли;

		КоличествоОткликов = КоличествоОткликов + 1;
		НоваяСтрока = СписокКандидатов.Добавить();
		НоваяСтрока.НомерСтроки = КоличествоОткликов;
		НоваяСтрока.ФИО = Кандидат.name;
		НоваяСтрока.Город = Кандидат.city;
		НоваяСтрока.Метро = Кандидат.metro;			
		НоваяСтрока.Образование = Кандидат.education;
				
		НоваяСтрока.ОжидаемаяЗарплата = Кандидат.salary; 
		НоваяСтрока.Пол = Кандидат.sex; 
		
		ДатаРождения = Дата(СтрЗаменить(Кандидат.date_birth, "-", "")); 
		НоваяСтрока.ДатаРождения = ДатаРождения;		
		НоваяСтрока.Возраст = Цел((ТекДата - ДатаРождения) / 60 / 60 / 24 / 365);
		
		НоваяСтрока.Почта = Кандидат.email;
		
		ТелефонКандидата = "+7 (" + Сред(Кандидат.phone, 2, 3) + ") " + Сред(Кандидат.phone, 5, 3) + "-" + Сред(Кандидат.phone, 8, 2) + "-" + Прав(Кандидат.phone, 2); 	
		НоваяСтрока.Телефон = ТелефонКандидата;
		
		НоваяСтрока.ФотоЗагружено = НЕ ПустаяСтрока(Кандидат.photo_extension);
		НоваяСтрока.РезюмеЗагружено = НЕ ПустаяСтрока(Кандидат.resume_extension);
		НоваяСтрока.ИдентификаторКандидата = Кандидат.id;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Асинх Процедура СкачатьРезюме(Команда) 
	
	ОчиститьСообщения();
	
	ТекущаяСтрока = Элементы.СписокКандидатов.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Выберите кандидата");
		Возврат;
	КонецЕсли; 
	
	Если НЕ ТекущаяСтрока.РезюмеЗагружено Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Кандидат не загрузил резюме");
		Возврат;	
	КонецЕсли;
	
	HTTPСоединение = Новый HTTPСоединение("localhost", 3000);
	HTTPЗапрос = Новый HTTPЗапрос("/includes/download_resume.php?id=" + ТекущаяСтрока.ИдентификаторКандидата);
	HTTPЗапрос.Заголовки.Вставить("Application", "1C_recruitment");
	
	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос);
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось загрузить резюме кандидата с сайта университета. Код ответа - " + HTTPОтвет.КодСостояния);
			Возврат;
		КонецЕсли;
		
		Результат = HTTPОтвет.ПолучитьТелоКакСтроку(); 	
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(Результат);
		ДвоичныеДанныеФайла = Base64Значение(ОтветJSON.resume_file);
		
		Режим = РежимДиалогаВыбораФайла.Сохранение; 
		ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(Режим);              
		ДиалогСохраненияФайла.ПолноеИмяФайла = ОтветJSON.name_file; 
		ДиалогСохраненияФайла.МножественныйВыбор = Ложь; 
		ДиалогСохраненияФайла.Заголовок = "Выберите место сохранения резюме";
		
		МестоСохранения = Ждать ДиалогСохраненияФайла.ВыбратьАсинх();				
		Если МестоСохранения = Неопределено Тогда;
			 Возврат;
		КонецЕсли;
		 
		ПолныйПутьКФайлу = МестоСохранения[0];
		
		РасширениеФайла = СтрРазделить(ОтветJSON.name_file, ".", Ложь);
		РасширениеФайла = РасширениеФайла[РасширениеФайла.ВГраница()];
		
		ОтветПользователя = Ждать ВопросАсинх("Открыть резюме кандидата?", РежимДиалогаВопрос.ДаНет,,, "Открыть резюме");
		
		Если ОтветПользователя = КодВозвратаДиалога.Да Тогда	
			Если РасширениеФайла = "pdf" Тогда
				ОтветПользователя = Ждать ВопросАсинх("Резюме имеет расширение ""pdf"". Открыть резюме в 1С?", РежимДиалогаВопрос.ДаНет,,, "Открыть резюме в 1С");
				Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
					ДокументPDF = Новый ДокументPDF();
					Ждать ДокументPDF.ПрочитатьАсинх(ПолныйПутьКФайлу);					
					ДокументPDF.Показать("Резюме кандидата - " + ОтветJSON.name_file);
				Иначе
					Ждать ЗапуститьПриложениеАсинх(ПолныйПутьКФайлу);	
				КонецЕсли;
			Иначе
				Ждать ЗапуститьПриложениеАсинх(ПолныйПутьКФайлу);	
			КонецЕсли;			
		КонецЕсли;			
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;
		
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПосмотретьФото(Команда)
	
	ОчиститьСообщения();
	
	ТекущаяСтрока = Элементы.СписокКандидатов.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Выберите кандидата");
		Возврат;
	КонецЕсли; 
	
	Если НЕ ТекущаяСтрока.ФотоЗагружено Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Кандидат не загрузил фотографию");
		Возврат;	
	КонецЕсли;
	
	HTTPСоединение = Новый HTTPСоединение("localhost", 3000);
	HTTPЗапрос = Новый HTTPЗапрос("/includes/upload_photo.php?id=" + ТекущаяСтрока.ИдентификаторКандидата);
	HTTPЗапрос.Заголовки.Вставить("Application", "1C_recruitment");

	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос);
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось посмотреть фото кандидата. Код ответа - " + HTTPОтвет.КодСостояния);
			Возврат;
		КонецЕсли;
		
		Результат = HTTPОтвет.ПолучитьТелоКакСтроку(); 	
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(Результат);
		ДвоичныеДанныеФайла = Base64Значение(ОтветJSON.photo);
		
		Каталог = Ждать КаталогВременныхФайловАсинх();
	
		ПолныйПутьФайла = Каталог + "candidate_files\" + ОтветJSON.name_photo;
		
		Ждать ДвоичныеДанныеФайла.ЗаписатьАсинх(ПолныйПутьФайла);
		Ждать ЗапуститьПриложениеАсинх(ПолныйПутьФайла);
			
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;

	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьКандидата(Команда)
	
	ОчиститьСообщения();
	
	ТекущаяСтрока = Элементы.СписокКандидатов.ТекущиеДанные;
	
	Если ТекущаяСтрока = Неопределено Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Выберите кандидата");
		Возврат;
	КонецЕсли;
	
	ИдентификаторКандидата = ТекущаяСтрока.ИдентификаторКандидата;
	
	РезультатПоиска = НайтиДубльКандидатаПоИдентификатору(ИдентификаторКандидата); 
	Если РезультатПоиска.НайденДубль Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Данный кандидат уже был добавлен в базу. Код элемента - " + РезультатПоиска.КодКандидата);
		Возврат;
	КонецЕсли;
	
	ЗначенияРеквизитов = Новый Структура;
	ЗначенияРеквизитов.Вставить("ИсточникЗаполнения", "ЗагрузкаОткликовССайтаУниверситета");
	ЗначенияРеквизитов.Вставить("ИдентификаторНаСайтеУниверситета", ТекущаяСтрока.ИдентификаторКандидата);
	ЗначенияРеквизитов.Вставить("СсылкаНаВакансию", Вакансия);
	ЗначенияРеквизитов.Вставить("ИсточникПривлечения", ПредопределенноеЗначение("Справочник.ИсточникиПривлечения.СайтУниверситета"));
	ЗначенияРеквизитов.Вставить("Наименование", ТекущаяСтрока.ФИО);
	ЗначенияРеквизитов.Вставить("Город", ТекущаяСтрока.Город);
	ЗначенияРеквизитов.Вставить("СтанцияМетро", ТекущаяСтрока.Метро);
	ЗначенияРеквизитов.Вставить("ДатаРождения", ТекущаяСтрока.ДатаРождения);
	ЗначенияРеквизитов.Вставить("Возраст", ТекущаяСтрока.Возраст);
	
	Если ТекущаяСтрока.Пол = "Мужской" Тогда
		ЗначенияРеквизитов.Вставить("Пол", ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Мужской"));
	ИначеЕсли ТекущаяСтрока.Пол = "Женский" Тогда 
		ЗначенияРеквизитов.Вставить("Пол", ПредопределенноеЗначение("Перечисление.ПолФизическогоЛица.Женский"));	
	КонецЕсли;
	
	ЗначенияРеквизитов.Вставить("Телефон", ТекущаяСтрока.Телефон);
	ЗначенияРеквизитов.Вставить("Эмаил", ТекущаяСтрока.Почта);
	ЗначенияРеквизитов.Вставить("Образование", ТекущаяСтрока.Образование);
	ЗначенияРеквизитов.Вставить("ОжидаемаяЗарплата", ТекущаяСтрока.ОжидаемаяЗарплата);
	
	Если ТекущаяСтрока.ФотоЗагружено Тогда
		ДвоичныеДанныеФайла = Ждать ДобавитьФотографиюКандидата(ИдентификаторКандидата);	
		ЗначенияРеквизитов.Вставить("ДвоичныеДанныеФайла", ДвоичныеДанныеФайла);
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура("ЗначенияЗаполнения", ЗначенияРеквизитов);	
	ОткрытьФорму("Справочник.Кандидаты.ФормаОбъекта", ПараметрыЗаполнения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиДубльКандидатаПоИдентификатору(ИдентификаторКандидата)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Кандидаты.Код КАК Код
		|ИЗ
		|	Справочник.Кандидаты КАК Кандидаты
		|ГДЕ
		|	Кандидаты.ИдентификаторНаСайтеУниверситета = &ИдентификаторНаСайтеУниверситета";
	
	Запрос.УстановитьПараметр("ИдентификаторНаСайтеУниверситета", ИдентификаторКандидата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РезультатПоиска = Новый Структура;
	Если РезультатЗапроса.Пустой() Тогда
		РезультатПоиска.Вставить("НайденДубль", Ложь);
		Возврат РезультатПоиска;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();	
	Выборка.Следующий();
	
	РезультатПоиска.Вставить("НайденДубль", Истина);
	РезультатПоиска.Вставить("КодКандидата", Выборка.Код);
	
	Возврат РезультатПоиска;

КонецФункции

&НаКлиенте
Асинх Функция ДобавитьФотографиюКандидата(ИдентификаторКандидата)

	ОчиститьСообщения();
			
	HTTPСоединение = Новый HTTPСоединение("localhost", 3000);
	HTTPЗапрос = Новый HTTPЗапрос("/includes/upload_photo.php?id=" + ИдентификаторКандидата);
	HTTPЗапрос.Заголовки.Вставить("Application", "1C_recruitment");

	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос);
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			Возврат "";
		КонецЕсли;
		
		Результат = HTTPОтвет.ПолучитьТелоКакСтроку(); 	
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(Результат);
		ДвоичныеДанныеФайла = Base64Значение(ОтветJSON.photo);
		Возврат ДвоичныеДанныеФайла;
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
		Возврат "";
	КонецПопытки;

КонецФункции
