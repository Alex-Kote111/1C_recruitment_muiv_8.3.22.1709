
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если ТекущийПользователь.ИспользоватьСвоеПриложение Тогда
		ТипИспользуемогоПриложения = Перечисления.ТипыПриложенияХХ.Личное;
		НазваниеПриложенияХХ = ТекущийПользователь.НазваниеПриложенияХХ;
		ПочтаРазработчикаХХ = ТекущийПользователь.ПочтаРазработчикаХХ;
	Иначе
		ТипИспользуемогоПриложения = Перечисления.ТипыПриложенияХХ.Общее;
		НазваниеПриложенияХХ = Константы.НазваниеПриложенияХХ.Получить();
		ПочтаРазработчикаХХ = Константы.ПочтаРазработчикаХХ.Получить();
	КонецЕсли;
			
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);	

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененыДанныеПользователя" Тогда
		ИспользоватьСвоеПриложение = Источник.Объект.ИспользоватьСвоеПриложение;
		ОбщееПриложение = (ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Общее"));
		СвоеПриложение = (ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Личное"));
		
		Если (СвоеПриложение ИЛИ ОбщееПриложение) И ИспользоватьСвоеПриложение Тогда
			ОбновитьДанныеЛичногоПриложения(Источник);
		ИначеЕсли СвоеПриложение И НЕ ИспользоватьСвоеПриложение Тогда
			ОбновитьДанныеОбщегоПриложения();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокЯзыковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОчиститьСообщения();
	
	ТекущаяСтрока = Элемент.ТекущиеДанные;	
	ВыбранныйЯзык = ТекущаяСтрока.Язык;
	ИдентификаторЯзыка = ТекущаяСтрока.ИдентификаторЯзыка;
	
	ДобавитьЯзык(ВыбранныйЯзык, ИдентификаторЯзыка);
	
	СписокЯзыков.Удалить(ТекущаяСтрока);
	ВсегоДоступныхЗначений = ВсегоДоступныхЗначений - 1;
	ОповеститьОбИзменении(Тип("СправочникСсылка.Языки"));
	ОбщегоНазначенияКлиент.ВывестиСообщение("Язык успешно добавлен");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ЗагрузитьЯзыки(Команда)
	
	ОчиститьСообщения();
	
	Если ПустаяСтрока(ТокенПользователя) Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Получите токен");
		Возврат;
	КонецЕсли;

	HTTPСоединение = Новый HTTPСоединение("api.hh.ru", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	
	HTTPЗапрос = Новый HTTPЗапрос("/languages");
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization", "Bearer " + ТокенПользователя);
	HTTPЗапрос.Заголовки.Вставить("User-Agent", НазваниеПриложенияХХ + " (" + ПочтаРазработчикаХХ + ")");

	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос); 
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось найти языки. Код ответа - " + HTTPОтвет.КодСостояния);
			Возврат;
		КонецЕсли;
		
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(HTTPОтвет.ПолучитьТелоКакСтроку(), Истина);
		ОтобразитьЯзыки(ОтветJSON);	
		ОбщегоНазначенияКлиент.ВывестиСообщение("Языки успешно загружены");
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());	
	КонецПопытки;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения)

	ОтборПользователя = Новый Структура("Пользователь, ТипПриложения", ПараметрыСеанса.ТекущийПользователь, ТипИспользуемогоПриложения);
	ТокенПользователя = РегистрыСведений.ТокеныПользователей.Получить(ОтборПользователя).Токен;

	Возврат ТокенПользователя; 

КонецФункции

&НаКлиенте
Процедура ОбновитьДанныеЛичногоПриложения(Источник)
	
	ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Личное");
	НазваниеПриложенияХХ = Источник.Объект.НазваниеПриложенияХХ;
	ПочтаРазработчикаХХ = Источник.Объект.ПочтаРазработчикаХХ;
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеОбщегоПриложения()

	ДанныеОбщегоПриложения = ПолучитьДанныеОбщегоПриложения();
	
	ТипИспользуемогоПриложения = ПредопределенноеЗначение("Перечисление.ТипыПриложенияХХ.Общее");
	НазваниеПриложенияХХ = ДанныеОбщегоПриложения.НазваниеПриложенияХХ;
	ПочтаРазработчикаХХ = ДанныеОбщегоПриложения.ПочтаРазработчикаХХ;
	ТокенПользователя = ПолучитьАктуальныйТокен(ТипИспользуемогоПриложения);

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеОбщегоПриложения()

	ДанныеОбщегоПриложения = Новый Структура;
	ДанныеОбщегоПриложения.Вставить("НазваниеПриложенияХХ", Константы.НазваниеПриложенияХХ.Получить());
	ДанныеОбщегоПриложения.Вставить("ПочтаРазработчикаХХ", Константы.ПочтаРазработчикаХХ.Получить());
	ДанныеОбщегоПриложения.Вставить("ТокенПользователя", ПолучитьАктуальныйТокен(Перечисления.ТипыПриложенияХХ.Общее));
	
	Возврат ДанныеОбщегоПриложения; 

КонецФункции

&НаКлиенте
Процедура ОтобразитьЯзыки(Языки)

	ОчиститьСообщения();
	СписокЯзыков.Очистить();
	ОтобразитьЯзыкиНаСервере(Языки);	

КонецПроцедуры

&НаСервере
Процедура ОтобразитьЯзыкиНаСервере(Языки)

	ВсегоДоступныхЗначений = 0;
	
	Для Каждого Язык Из Языки Цикл
		НаименованиеЯзыка = Язык["name"];
		ИдентификаторЯзыка = Язык["id"];
		
		СсылкаНаСправочник = Справочники.Языки.НайтиПоРеквизиту("ИдентификаторЯзыкаХХ", ИдентификаторЯзыка); 	
		Если НЕ СсылкаНаСправочник.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаЯзык = СписокЯзыков.Добавить();
		СтрокаЯзык.Язык = НаименованиеЯзыка;
		СтрокаЯзык.ИдентификаторЯзыка = ИдентификаторЯзыка;
		ВсегоДоступныхЗначений = ВсегоДоступныхЗначений + 1;
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьЯзык(ВыбранныйЯзык, ИдентификаторЯзыка)

	НовыйЯзык = Справочники.Языки.СоздатьЭлемент();
	НовыйЯзык.Наименование = ВыбранныйЯзык;
	НовыйЯзык.ИдентификаторЯзыкаХХ = ИдентификаторЯзыка;
	НовыйЯзык.Записать();

КонецПроцедуры

#КонецОбласти





