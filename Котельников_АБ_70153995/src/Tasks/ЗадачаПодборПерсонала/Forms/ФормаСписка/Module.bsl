
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьОтборЗадачДляИсполнителей();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборЗадачДляИсполнителей()
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	ДолжностьТекПользователя = ПолучитьДолжностьТекПользователя(ТекПользователь);
	
	//   ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//   ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	//
	//   ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//   ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
	//   ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//   ЭлементОтбора.ПравоеЗначение = "Опубликовать вакансию";
	//
	//   ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//   ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Должность");
	//   ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//   ЭлементОтбора.ПравоеЗначение = ДолжностьТекПользователя;
	
	
	
	
	
	//ГруппаОтбораГлавная = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//ГруппаОтбораГлавная.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ;
	//
	//ПерваяПодчиненная = ГруппаОтбораГлавная.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//ПерваяПодчиненная.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	//
	//ЭлементОтбора = ПерваяПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение = "Опубликовать вакансию";
	//
	//ЭлементОтбора = ПерваяПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Должность");
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение = ДолжностьТекПользователя;
	//
	//ЭлементОтбора = ПерваяПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение = ТекПользователь;
	
	//ВтораяПодчиненная = ГруппаОтбораГлавная.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//ВтораяПодчиненная.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	//
	//ЭлементОтбора = ВтораяПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение = "Опубликовать вакансию";
	//
	//ЭлементОтбора = ВтораяПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Должность");
	//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//ЭлементОтбора.ПравоеЗначение = ДолжностьТекПользователя;
	
	////////////////////////////////////////////////////////////
	
	ЭтоМенеджер = ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.МенеджерПоПодбору);
	ЭтоРуководитель = ПользователиИнформационнойБазы.ТекущийПользователь().Роли.Содержит(Метаданные.Роли.РуководительСлужбыПерсонала);
	
	Если ЭтоМенеджер Тогда
		ЭлементОтбора = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Должность");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Справочники.Должности.МенеджерПоПодбору;
		
		
		ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ;
		
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ТекПользователь;
		
		ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
		
		//ЭлементОтбора = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
		//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		//ЭлементОтбора.ПравоеЗначение = "Регистрация подходящих кандидатов";
		
		
		// ОСНОВНАЯ ГРУППА (Точка действия равна "Опубликовать вакансию" и должность равна текущему пользователю)
	//	ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	//	
	//	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	ЭлементОтбора.ПравоеЗначение = "Опубликовать вакансию";
	//
	//	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	ЭлементОтбора.ПравоеЗначение = Справочники.Подразделения.СлужбаПерсонала;
	//	
	//	ЭлементОтбора = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Должность");
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	ЭлементОтбора.ПравоеЗначение = Справочники.Должности.МенеджерПоПодбору;
	//		
	//	// ПОДЧИНЕННАЯ ГРУППА (Исполнитель заполнен или нет)
	//	ГруппаПодчиненная = ГруппаОтбора.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	//	ГруппаПодчиненная.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИЛИ;
	//	
	//	ЭлементОтбора = ГруппаПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	ЭлементОтбора.ПравоеЗначение = ТекПользователь;
	//	
	//	ЭлементОтбора = ГруппаПодчиненная.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
	//	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	// РАБОТА СО СПИСКОМ
	
		//ЭлементОтбора = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		//ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
		//ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		//СписокТочек = Новый СписокЗначений;
		//СписокТочек.Добавить("Регистрация подходящих кандидатов");
		//СписокТочек.Добавить("Провести телефонные интервью");
		//ЭлементОтбора.ПравоеЗначение = СписокТочек;
	
	
		
	ИначеЕсли ЭтоРуководитель Тогда
		ЭлементОтбора = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Подразделение");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Справочники.Подразделения.СлужбаПерсонала;
		
		ЭлементОтбора = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Должность");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Справочники.Должности.РуководительСлужбыПерсонала;
		
	Иначе
		ЭлементОтбора = Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДолжностьТекПользователя(Пользователь)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Сотрудник.Должность КАК Должность
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Пользователь);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();	
	Выборка.Следующий();

	Возврат Выборка.Должность;

КонецФункции
