 
 &НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда	
		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
		Объект.Ответственный = ТекущийПользователь.Сотрудник;
		Объект.АвторДокумента = ТекущийПользователь;
	КонецЕсли;
		
КонецПроцедуры
 
&НаКлиенте
Процедура ВакансияПриИзменении(Элемент)
	
	ДанныеВакансии = ПолучитьДанныеОВакансии(Объект.Вакансия);
		
	Объект.НаименованиеВакансии = ДанныеВакансии.НаименованиеВакансии;
	Объект.Подразделение = ДанныеВакансии.Подразделение;
    Объект.Должность = ДанныеВакансии.Должность; 
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьДанныеОВакансии(Вакансия)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Вакансия.НаименованиеВакансии КАК НаименованиеВакансии,
		|	Вакансия.Подразделение КАК Подразделение,
		|	Вакансия.Должность КАК Должность
		|ИЗ
		|	Документ.Вакансия КАК Вакансия
		|ГДЕ
		|	Вакансия.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Вакансия);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	ДанныеВакансии = Новый Структура;
	ДанныеВакансии.Вставить("НаименованиеВакансии", Выборка.НаименованиеВакансии);
	ДанныеВакансии.Вставить("Подразделение", Выборка.Подразделение); 
	ДанныеВакансии.Вставить("Должность", Выборка.Должность);
	
	Возврат ДанныеВакансии;

КонецФункции

&НаКлиенте
Процедура КандидатыКандидатПриИзменении(Элемент)
	
	ТекущаяСтрокаТЧ = Элементы.Кандидаты.ТекущиеДанные;
	
	ДанныеКандидата = ПолучитьДанныеКандидата(ТекущаяСтрокаТЧ.Кандидат);
	
	ТекущаяСтрокаТЧ.ИсточникПривлечения = ДанныеКандидата.ИсточникПривлечения;
	ТекущаяСтрокаТЧ.ОткликОтКандидата  = ДанныеКандидата.ОткликОтКандидата;
	
	Если ТекущаяСтрокаТЧ <> Неопределено И НЕ ТекущаяСтрокаТЧ.Кандидат.Пустая() И НЕ ТекущаяСтрокаТЧ.Уведомлен Тогда
		ОтправитьУведомлениеОРассмотренииРезюме(ТекущаяСтрокаТЧ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОтправитьУведомлениеОРассмотренииРезюме(ТекущаяСтрокаТЧ)
	
	ОтветПользователя = Ждать ВопросАсинх("Отправить кандидату уведомление о рассмотрении резюме?", РежимДиалогаВопрос.ДаНет,,, "Отправка уведомления кандидату");			
	
	Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
		Возврат;	
	КонецЕсли; 
	
	ДанныеДляОтправкиПисьма = ПолучитьДанныеДляОтправкиПисьма(ТекущаяСтрокаТЧ.Кандидат, ТекущаяСтрокаТЧ.ОткликОтКандидата, Объект.Вакансия);	
	Если ДанныеДляОтправкиПисьма.ШаблонПисьма.Пустая() Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Не найден шаблон письма о рассмотрении резюме. Проверьте свои настройки пользователя");
		Возврат;
	КонецЕсли; 
	
	Если ПустаяСтрока(ДанныеДляОтправкиПисьма.ПочтаКандидата) Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("У данного кандидата не заполнена почта. Отправка невозможна");
		Возврат;
	КонецЕсли;
				
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.АдресСервераSMTP = "smtp.mail.ru";
	Профиль.ПользовательSMTP = ДанныеДляОтправкиПисьма.Почта;
	Профиль.ПарольSMTP = ДанныеДляОтправкиПисьма.Пароль;
	Профиль.ИспользоватьSSLSMTP = Истина;
	Профиль.ПортSMTP = 465;     

	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	ТекстПисьма = ПодставитьЗначенияВПисьмо(ДанныеДляОтправкиПисьма);
	
	Текст = Письмо.Тексты.Добавить(ТекстПисьма);
	Текст.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	Письмо.Тема = ДанныеДляОтправкиПисьма.Тема; 
	Письмо.Отправитель = ДанныеДляОтправкиПисьма.Почта;
	Письмо.ИмяОтправителя = ДанныеДляОтправкиПисьма.ИмяОтправителя;
		
	Письмо.Получатели.Добавить(ДанныеДляОтправкиПисьма.ПочтаКандидата);
	Почта = Новый ИнтернетПочта;	
	Попытка
		Почта.Подключиться(Профиль);
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось подключиться к серверу");
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		Почта.Послать(Письмо); 
		ОбщегоНазначенияКлиент.ВывестиСообщение("Кандидату """ + ДанныеДляОтправкиПисьма.ФИОКандидата + """ успешно отправлено уведомление о рассмотрении резюме");
		ТекущаяСтрокаТЧ.Уведомлен = Истина;
		ЗаписатьУведомлениеКандидатаВРегистр(Объект.Вакансия, ТекущаяСтрокаТЧ.Кандидат, ДанныеДляОтправкиПисьма.ШаблонПисьма);
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось отправить письмо");
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;
	
	Почта.Отключиться();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеДляОтправкиПисьма(Кандидат, ОткликОтКандидата, Вакансия)
	
	ШаблонПисьма = Справочники.ШаблоныПисем.ПустаяСсылка();

	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Для Каждого Настройка Из ТекПользователь.НастройкиУведомлений Цикл
		Если Настройка.ЭтапУведомления = Перечисления.ЭтапыУведомлений.РассмотрениеРезюме И НЕ Настройка.ШаблонПисьма.Пустая() И Настройка.ОткликОтКандидата = ОткликОтКандидата Тогда
			ШаблонПисьма = Настройка.ШаблонПисьма;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Сотрудник.Должность КАК СотрудникДолжность,
		|	Пользователи.Сотрудник.Наименование КАК СотрудникНаименование
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Ссылка = &ПользовательСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Вакансия.НаименованиеВакансии КАК НаименованиеВакансии
		|ИЗ
		|	Документ.Вакансия КАК Вакансия
		|ГДЕ
		|	Вакансия.Ссылка = &ВакансияСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Кандидаты.Наименование КАК Наименование,
		|	Кандидаты.Эмаил КАК Эмаил,
		|	Кандидаты.ОткликОтКандидата КАК ОткликОтКандидата
		|ИЗ
		|	Справочник.Кандидаты КАК Кандидаты
		|ГДЕ
		|	Кандидаты.Ссылка = &КандидатСсылка";
	
	Запрос.УстановитьПараметр("ПользовательСсылка", ТекПользователь);
	Запрос.УстановитьПараметр("ВакансияСсылка", Вакансия);
	Запрос.УстановитьПараметр("КандидатСсылка", Кандидат);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПользователь = РезультатЗапроса[0].Выбрать();	
	ВыборкаПользователь.Следующий(); 
	
	ВыборкаВакансия = РезультатЗапроса[1].Выбрать();	
	ВыборкаВакансия.Следующий();
	
	ВыборкаКандидат = РезультатЗапроса[2].Выбрать();	
	ВыборкаКандидат.Следующий();
	
	НаименованиеОрганизации = Константы.НаименованиеОрганизации.Получить();
	АдресОрганизации = Константы.АдресОрганизации.Получить();
	
    ДанныеДляОтправки = Новый Структура;
	ДанныеДляОтправки.Вставить("Почта", ТекПользователь.ПочтаПользователяЭмаил);
	ДанныеДляОтправки.Вставить("Пароль", ТекПользователь.ПарольПриложенияЭмаил);
	ДанныеДляОтправки.Вставить("ИмяСотрудника", ВыборкаПользователь.СотрудникНаименование);
	ДанныеДляОтправки.Вставить("Должность", ВыборкаПользователь.СотрудникДолжность);
	ДанныеДляОтправки.Вставить("НаименованиеОрганизации", НаименованиеОрганизации);
	ДанныеДляОтправки.Вставить("АдресОрганизации", АдресОрганизации);
	ДанныеДляОтправки.Вставить("ШаблонПисьма", ШаблонПисьма);
	ДанныеДляОтправки.Вставить("Тема", ШаблонПисьма.Тема);
	ДанныеДляОтправки.Вставить("ИмяОтправителя", ШаблонПисьма.ИмяОтправителя);
	ДанныеДляОтправки.Вставить("ТекстПисьма", ШаблонПисьма.ТекстПисьма);
	ДанныеДляОтправки.Вставить("НаименованиеВакансии", ВыборкаВакансия.НаименованиеВакансии);
	ДанныеДляОтправки.Вставить("ФИОКандидата", ВыборкаКандидат.Наименование);
	ДанныеДляОтправки.Вставить("ПочтаКандидата", ВыборкаКандидат.Эмаил);
	ДанныеДляОтправки.Вставить("ОткликОтКандидата", ВыборкаКандидат.ОткликОтКандидата);
		
	Возврат ДанныеДляОтправки;
	
КонецФункции

&НаКлиенте
Функция ПодставитьЗначенияВПисьмо(ДанныеДляОтправки)
	
	ТекстПисьма = ДанныеДляОтправки.ТекстПисьма;
	
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "[Кандидат]", ДанныеДляОтправки.ФИОКандидата);
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "[Вакансия]", ДанныеДляОтправки.НаименованиеВакансии);
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "[Отправитель]", ДанныеДляОтправки.ИмяСотрудника);
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "[Должность]", ДанныеДляОтправки.Должность);
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "[Организация]", ДанныеДляОтправки.НаименованиеОрганизации);
    ТекстПисьма = СтрЗаменить(ТекстПисьма, "[Адрес]", ДанныеДляОтправки.АдресОрганизации); 
	
	Возврат ТекстПисьма;

КонецФункции

&НаКлиенте
Процедура ОтправитьУведомлениеКандидату(Команда)
	
	ОчиститьСообщения();
	
	ТекущаяСтрокаТЧ = Элементы.Кандидаты.ТекущиеДанные;
	
	Если ТекущаяСтрокаТЧ = Неопределено ИЛИ ТекущаяСтрокаТЧ.Кандидат.Пустая() Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Кандидат не выбран");
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрокаТЧ.Уведомлен Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Данному кандидату уже было отправлено уведомление о рассмотрении резюме");
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрокаТЧ <> Неопределено И НЕ ТекущаяСтрокаТЧ.Кандидат.Пустая() И НЕ ТекущаяСтрокаТЧ.Уведомлен Тогда
		ОтправитьУведомлениеОРассмотренииРезюме(ТекущаяСтрокаТЧ);
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеКандидата(Кандидат)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Кандидаты.ИсточникПривлечения КАК ИсточникПривлечения,
		|	Кандидаты.ОткликОтКандидата КАК ОткликОтКандидата
		|ИЗ
		|	Справочник.Кандидаты КАК Кандидаты
		|ГДЕ
		|	Кандидаты.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Кандидат);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();	
	Выборка.Следующий();
	
	ДанныеКандидата = Новый Структура("ИсточникПривлечения, ОткликОтКандидата", Выборка.ИсточникПривлечения, Выборка.ОткликОтКандидата);
	
	Возврат ДанныеКандидата;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьУведомлениеКандидатаВРегистр(Вакансия, Кандидат, Уведомление)

	НоваяЗапись = РегистрыСведений.УведомленияКандидатов.СоздатьМенеджерЗаписи();
	НоваяЗапись.Период = ТекущаяДата();
	НоваяЗапись.Вакансия = Вакансия;
	НоваяЗапись.ЭтапУведомления = Перечисления.ЭтапыУведомлений.РассмотрениеРезюме;
	НоваяЗапись.Кандидат = Кандидат;
	НоваяЗапись.Уведомление = Уведомление;
	НоваяЗапись.Записать();

КонецПроцедуры


