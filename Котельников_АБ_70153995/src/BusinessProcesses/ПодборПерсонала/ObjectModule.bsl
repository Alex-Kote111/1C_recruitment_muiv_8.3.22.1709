
Процедура ЗаявкаОдобренаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = СогласованиеЗаявки.Согласована;

КонецПроцедуры

Процедура НайденыКандидатыПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Если НайденыПодходящиеКандидаты = Перечисления.ВариантыОтветаНаВопрос.Да Тогда
		Результат = Истина;
	ИначеЕсли НайденыПодходящиеКандидаты =  Перечисления.ВариантыОтветаНаВопрос.Нет Тогда
		Результат = Ложь;
	КонецЕсли;
		
КонецПроцедуры

Процедура КтоПубликовалВакансиюПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Если ОтветственныйЗаПубликациюВакансии = Перечисления.ОтветственныеЗаПубликацию.МенеджерПоПодбору Тогда
		Результат = Истина;
	ИначеЕсли ОтветственныйЗаПубликациюВакансии = Перечисления.ОтветственныеЗаПубликацию.РуководительСлужбыПерсонала Тогда
		Результат = Ложь;		
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьЗаявкуНаПодборПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ДанныеПользователя = ПолучитьДанныеТекПользователя();
		
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	ЗадачаОбъект.Исполнитель = ДанныеПользователя.ТекПользователь;
	ЗадачаОбъект.Подразделение = ДанныеПользователя.ПодразделениеПользователя;
	ЗадачаОбъект.Должность = ДанныеПользователя.ДолжностьПользователя;
	
КонецПроцедуры


Процедура СоздатьСогласованиеЗаявкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ДанныеПользователя = ПолучитьДанныеТекПользователя();
		
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	ЗадачаОбъект.Исполнитель = ДанныеПользователя.ТекПользователь;
	ЗадачаОбъект.Подразделение = ДанныеПользователя.ПодразделениеПользователя;
	ЗадачаОбъект.Должность = ДанныеПользователя.ДолжностьПользователя;	
	
КонецПроцедуры

Процедура СогласоватьЗаявкуПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)

	
	
	//БизнесПроцессОбъект = Задача.БизнесПроцесс.ПолучитьОбъект();
	//Если СогласованиеЗаявки.Согласована Тогда
	//	БизнесПроцессОбъект.ЗаявкаОдобрена = Истина;
	//Иначе
	//	БизнесПроцессОбъект.ЗаявкаОтклонена = Истина;
	//КонецЕсли;
	//БизнесПроцессОбъект.ОтветственныйЗаЗаявку = СогласованиеЗаявки.ОтветственныйЗаЗаявку;
	//БизнесПроцессОбъект.Записать();
	
	//Если СогласованиеЗаявки.Согласована Тогда
	//	БизнесПроцессОбъект = Задача.БизнесПроцесс.ПолучитьОбъект();
	//	БизнесПроцессОбъект.ЗаявкаОдобрена = Истина;
	//	БизнесПроцессОбъект.ОтветственныйЗаЗаявку = СогласованиеЗаявки.ОтветственныйЗаЗаявку;
	//	БизнесПроцессОбъект.Записать();		
	//КонецЕсли;
	
	
КонецПроцедуры


Процедура ОпубликоватьВакансиюПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	
	Если ОтветственныйЗаПубликациюВакансии = Перечисления.ОтветственныеЗаПубликацию.РуководительСлужбыПерсонала Тогда
		ЗадачаОбъект.Подразделение = Справочники.Подразделения.СлужбаПерсонала;
		ЗадачаОбъект.Должность = Справочники.Должности.РуководительСлужбыПерсонала;
	ИначеЕсли ОтветственныйЗаПубликациюВакансии = Перечисления.ОтветственныеЗаПубликацию.МенеджерПоПодбору Тогда
		ЗадачаОбъект.Подразделение = Справочники.Подразделения.СлужбаПерсонала;
		ЗадачаОбъект.Должность = Справочники.Должности.МенеджерПоПодбору;
	Иначе
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не выбран ответственный за публикацию вакансии. Выполнение задачи невозможно";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОпубликоватьВакансиюПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Если Задача.Должность = Справочники.Должности.МенеджерПоПодбору Тогда
		БизнесПроцессОбъект = Задача.БизнесПроцесс.ПолучитьОбъект();
		БизнесПроцессОбъект.ОтветственныйЗаПоискКандидатов = Задача.Исполнитель.Сотрудник;
		БизнесПроцессОбъект.Записать();		
	КонецЕсли;

КонецПроцедуры

Процедура НачатьПоискКандидатовПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	БизнесПроцессОбъект = Задача.БизнесПроцесс.ПолучитьОбъект();
	БизнесПроцессОбъект.ОтветственныйЗаПоискКандидатов = Задача.Исполнитель.Сотрудник;
	БизнесПроцессОбъект.Записать();
	
	ВакансияОбъект = Вакансия.ПолучитьОбъект();
	ВакансияОбъект.ОтветственныйЗаПоискКандидатов = Задача.Исполнитель.Сотрудник;
	ВакансияОбъект.Записать();
		
КонецПроцедуры

Процедура РегистрацияПодходящихКандидатовПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	
	Если ЗадачаОбъект.Должность <> Справочники.Должности.МенеджерПоПодбору  Тогда
		Возврат;
	КонецЕсли;
	
	ЗадачаОбъект.Исполнитель = ПараметрыСеанса.ТекущийПользователь;
		
КонецПроцедуры

Процедура ПровестиТелефонныеИнтервьюПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	
	Если ЗадачаОбъект.Должность <> Справочники.Должности.МенеджерПоПодбору  Тогда
		Возврат;
	КонецЕсли;
	
	ЗадачаОбъект.Исполнитель = ПараметрыСеанса.ТекущийПользователь;	
	
КонецПроцедуры

Процедура ПровестиПервичныеСобеседованияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	
	Если ЗадачаОбъект.Должность <> Справочники.Должности.МенеджерПоПодбору Тогда
		Возврат;
	КонецЕсли;
	
	ЗадачаОбъект.Исполнитель = ПараметрыСеанса.ТекущийПользователь;		
	
КонецПроцедуры

Процедура ПроведениеСобеседованийПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	ЗадачаОбъект.Исполнитель = ПолучитьПользователяПоСотруднику(ЗадачаОбъект.БизнесПроцесс.ИнициаторЗаявки);
	
КонецПроцедуры


Процедура ФиксированиеЗатратНаВакансиюПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	ЗадачаОбъект.Исполнитель = ПолучитьПользователяПоСотруднику(ЗадачаОбъект.БизнесПроцесс.ОтветственныйЗаПоискКандидатов);
		
КонецПроцедуры

Процедура ПроведениеТестированийПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ЗадачаОбъект = ФормируемыеЗадачи[0];
	ЗадачаОбъект.Исполнитель = ПолучитьПользователяПоСотруднику(ЗадачаОбъект.БизнесПроцесс.ИнициаторЗаявки);	
	
КонецПроцедуры

Функция ПолучитьДанныеТекПользователя()
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрРегистрации.Подразделение КАК Подразделение,
		|	РегистрРегистрации.Должность КАК Должность
		|ИЗ
		|	РегистрСведений.РегистрРегистрации КАК РегистрРегистрации
		|ГДЕ
		|	РегистрРегистрации.Исполнитель = &Исполнитель";
	
	Запрос.УстановитьПараметр("Исполнитель", ТекПользователь);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();	
	Выборка.Следующий();

	ДанныеПользователя = Новый Структура;
	ДанныеПользователя.Вставить("ТекПользователь", ТекПользователь);
	ДанныеПользователя.Вставить("ПодразделениеПользователя", Выборка.Подразделение);
	ДанныеПользователя.Вставить("ДолжностьПользователя", Выборка.Должность);
	
	Возврат ДанныеПользователя;
	
КонецФункции

Функция ПолучитьПользователяПоСотруднику(Сотрудник)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();

	Возврат Выборка.Пользователь;
	
КонецФункции

Процедура СогласоватьЗаявкуПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	БизнесПроцессОбъект = Задача.БизнесПроцесс.ПолучитьОбъект();
	Если СогласованиеЗаявки.Согласована Тогда
		БизнесПроцессОбъект.ЗаявкаОдобрена = Истина;
	Иначе
		БизнесПроцессОбъект.ЗаявкаОтклонена = Истина;
	КонецЕсли;
	БизнесПроцессОбъект.ОтветственныйЗаЗаявку = СогласованиеЗаявки.ОтветственныйЗаЗаявку;
	БизнесПроцессОбъект.Записать();	
	
КонецПроцедуры
































