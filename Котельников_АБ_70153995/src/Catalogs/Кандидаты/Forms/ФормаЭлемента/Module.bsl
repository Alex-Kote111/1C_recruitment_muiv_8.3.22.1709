
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Объект.Ссылка.Пустая() Тогда 
		Если ЭтотОбъект.Параметры.ЗначенияЗаполнения.Свойство("ДополнительнаяИнформацияОСебе") Тогда
			ТекстОСебе.Добавить(ЭтотОбъект.Параметры.ЗначенияЗаполнения.ДополнительнаяИнформацияОСебе);
		КонецЕсли;
		Объект.ДатаПоступления = ТекущаяДата();
		Возврат;
	КонецЕсли;
	
	ДанныеФотографии = РегистрыСведений.ФотографииКандидатов.СоздатьМенеджерЗаписи();
	ДанныеФотографии.Кандидат = Объект.Ссылка;
	ДанныеФотографии.Прочитать();
	
	Если ДанныеФотографии.Выбран() Тогда
		Объект.ФотоКандидата = ПоместитьВоВременноеХранилище(ДанныеФотографии.Фотография.Получить());
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.ИсточникПривлечения = ПредопределенноеЗначение("Справочник.ИсточникиПривлечения.ХэдХантер") Тогда
		Элементы.ФормаОткрытьРезюмеВБраузере.Видимость = Истина;
		Элементы.ФормаСкачатьРезюме.Видимость = Истина;
		Элементы.ФормаОбновитьСсылкуНаСкачиваниеРезюмеХХ.Видимость = Истина;
	ИначеЕсли Объект.ИсточникПривлечения = ПредопределенноеЗначение("Справочник.ИсточникиПривлечения.СайтУниверситета") Тогда
		Элементы.ФормаОткрытьРезюмеВБраузере.Видимость = Ложь;
		Элементы.ФормаСкачатьРезюме.Видимость = Истина;
		Элементы.ФормаОбновитьСсылкуНаСкачиваниеРезюмеХХ.Видимость = Ложь;
	Иначе
		Элементы.ФормаОткрытьРезюмеВБраузере.Видимость = Ложь;
		Элементы.ФормаСкачатьРезюме.Видимость = Ложь;
		Элементы.ФормаОбновитьСсылкуНаСкачиваниеРезюмеХХ.Видимость = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ТекстОСебе = ТекущийОбъект.ХранилищеТекстаОКандидате.Получить();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ХранилищеТекстаОКандидате = Новый ХранилищеЗначения(ТекстОСебе);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
		
	Если ЭтоАдресВременногоХранилища(Объект.ФотоКандидата) Тогда
		ЗаписьОФотографии = РегистрыСведений.ФотографииКандидатов.СоздатьМенеджерЗаписи();
		ЗаписьОФотографии.Кандидат = Объект.Ссылка; 		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Объект.ФотоКандидата);
		ЗаписьОФотографии.Фотография = Новый ХранилищеЗначения(ДвоичныеДанные); 
		ЗаписьОФотографии.Записать();
	КонецЕсли;  
	
	Если Объект.ФотоКандидата = "УдалитьФото" Тогда
		УдалитьФотографиюИзРегистра(Объект.Ссылка); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СсылкаНаВакансиюПриИзменении(Элемент)
	
	Объект.НаименованиеВакансии = ПолучитьНаименованиеВакансии(Объект.СсылкаНаВакансию);	
	
КонецПроцедуры

&НаКлиенте
Процедура ГородПриИзменении(Элемент)
	
	Объект.Регион = ПолучитьРегионГорода(Объект.Город);		
	
КонецПроцедуры 

&НаКлиенте
Процедура ФотоКандидатаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
	ВыбратьФотоКандидата();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ОткрытьРезюмеВБраузере(Команда)
	
	ОчиститьСообщения();
		
	Если ПустаяСтрока(Объект.СсылкаНаРезюме) Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Ссылка не найдена. Кандидат был добавлен не из обработки ""Поиск и просмотр резюме HeadHunter""");
		Возврат;
	КонецЕсли;
		
	Ждать ЗапуститьПриложениеАсинх(Объект.СсылкаНаРезюме);	
	
КонецПроцедуры

&НаКлиенте
Процедура СкачатьРезюме(Команда)
	
	ОчиститьСообщения();
	
	Если Объект.Ссылка.Пустая() Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Элемент не сохранен. Скачивание недоступно");
		Возврат;
	КонецЕсли;
	
	Если Объект.ИсточникПривлечения = ПредопределенноеЗначение("Справочник.ИсточникиПривлечения.ХэдХантер") Тогда
		СкачатьРезюмеСХХ();
	ИначеЕсли Объект.ИсточникПривлечения = ПредопределенноеЗначение("Справочник.ИсточникиПривлечения.СайтУниверситета") Тогда
		СкачатьРезюмеССайтаУниверситета();	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Асинх Процедура ОбновитьСсылкуНаСкачиваниеРезюмеХХ(Команда)
	
	ОчиститьСообщения();
	
	ДанныеПриложения = ПолучитьДанныеПриложения();
	
	HTTPСоединение = Новый HTTPСоединение("api.hh.ru", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	HTTPЗапрос = Новый HTTPЗапрос("/resumes/" + Объект.ИдентификаторРезюмеХХ);
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization", "Bearer " + ДанныеПриложения.ТокенПользователя);
	HTTPЗапрос.Заголовки.Вставить("User-Agent", ДанныеПриложения.НазваниеПриложения + " (" + ДанныеПриложения.ПочтаРазработчика + ")");
	
	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос);
		
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось обновить ссылку на скачивание резюме. Код ответа - " + HTTPОтвет.КодСостояния); 
			Возврат;
		КонецЕсли;
		
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(HTTPОтвет.ПолучитьТелоКакСтроку(), Истина);	
		Объект.СсылкаНаСкачиваниеРезюмеХХ = ОтветJSON["download"]["pdf"]["url"];
		Модифицированность = Истина;
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФотографию(Команда)
		
	Объект.ФотоКандидата = "УдалитьФото";
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура СкачатьРезюмеСХХ()

	СсылкаНаРезюме = Объект.СсылкаНаСкачиваниеРезюмеХХ;
	
	Если ПустаяСтрока(СсылкаНаРезюме) Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Не найдена ссылка на скачивание резюме. Кандидат был добавлен не из обработки ""Поиск и просмотр резюме HeadHunter""");
		Возврат;
	КонецЕсли;
	
	СсылкаНаРезюме = Сред(СсылкаНаРезюме, 18);	
	ДанныеПриложения = ПолучитьДанныеПриложения();
	
	Если ПустаяСтрока(ДанныеПриложения.ТокенПользователя) Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Получите токен");
		Возврат;
	КонецЕсли;
	
	HTTPСоединение = Новый HTTPСоединение("api.hh.ru", 443,,,,, Новый ЗащищенноеСоединениеOpenSSL());
	HTTPЗапрос = Новый HTTPЗапрос(СсылкаНаРезюме);
	HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/pdf");
	HTTPЗапрос.Заголовки.Вставить("Authorization", "Bearer " + ДанныеПриложения.ТокенПользователя);
	HTTPЗапрос.Заголовки.Вставить("User-Agent", ДанныеПриложения.НазваниеПриложения + " (" + ДанныеПриложения.ПочтаРазработчика + ")");
	
	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос);
		
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбработатьКодОтвета(HTTPОтвет.КодСостояния);
			Возврат;
		КонецЕсли;
		
		ФайлПДФ = HTTPОтвет.ПолучитьТелоКакДвоичныеДанные();
		
		Режим = РежимДиалогаВыбораФайла.Сохранение; 
		ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(Режим);              
		ДиалогСохраненияФайла.ПолноеИмяФайла = Лев(Строка(Объект.СсылкаНаВакансию), 19) + Объект.НаименованиеВакансии + "(" + Формат(Объект.ДатаСозданияРезюме, "ДЛФ=ДД") + "-" + Формат(Объект.ДатаПоследнегоОбновленияРезюме, "ДЛФ=ДД") + ")" + ".pdf"; 
		ДиалогСохраненияФайла.МножественныйВыбор = Ложь; 
		ДиалогСохраненияФайла.Заголовок = "Выберите место сохранения резюме";
		
		МестоСохранения = Ждать ДиалогСохраненияФайла.ВыбратьАсинх();	
		Если МестоСохранения = Неопределено Тогда;
			Возврат;
		КонецЕсли;   
		
		ОтветПользователя = Ждать ВопросАсинх("Сохранить резюме в регистре с файлами кандидатов?", РежимДиалогаВопрос.ДаНет,,, "Сохранить резюме в регистре"); 
		
		Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
			НазваниеФайла = Лев(Строка(Объект.СсылкаНаВакансию), 19) + Объект.ЖелаемаяДолжность + "(" + Формат(Объект.ДатаСозданияРезюме, "ДЛФ=ДД") + "-" + Формат(Объект.ДатаПоследнегоОбновленияРезюме, "ДЛФ=ДД") + ")";
			ЗаписатьФайлПДФВРегистр(ФайлПДФ, Объект.Ссылка, НазваниеФайла);	
		КонецЕсли;
		
		ПолныйПутьКФайлу = МестоСохранения[0];
		
		//ЗаписьДанных = Новый ЗаписьДанных(ПолныйПутьКФайлу);
		//Ждать ЗаписьДанных.ЗаписатьАсинх(ФайлПДФ);
		//Ждать ЗаписьДанных.ЗакрытьАсинх();
		Ждать ФайлПДФ.ЗаписатьАсинх(ПолныйПутьКФайлу);
		
		ОтветПользователя = Ждать ВопросАсинх("Открыть резюме после скачивания?", РежимДиалогаВопрос.ДаНет,,, "Открыть резюме"); 
		
		Если ОтветПользователя = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		ДокументPDF = Новый ДокументPDF();
		Ждать ДокументPDF.ПрочитатьАсинх(ПолныйПутьКФайлу);
		ДокументPDF.Показать("Резюме кандидата - " + Объект.ЖелаемаяДолжность);		
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;	

КонецПроцедуры

&НаКлиенте
Асинх Процедура СкачатьРезюмеССайтаУниверситета()
		
	Если ПустаяСтрока(Объект.ИдентификаторНаСайтеУниверситета) Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Кандидат не загрузил резюме");
		Возврат;
	КонецЕсли; 
	
	HTTPСоединение = Новый HTTPСоединение("taukpebkr3.temp.swtest.ru");
	HTTPЗапрос = Новый HTTPЗапрос("/includes/download_resume.php?id=" + Объект.ИдентификаторНаСайтеУниверситета);
	HTTPЗапрос.Заголовки.Вставить("Application", "1C_recruitment");
	
	Попытка
		HTTPОтвет = Ждать HTTPСоединение.ПолучитьАсинх(HTTPЗапрос);
		Если HTTPОтвет.КодСостояния <> 200 Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Не удалось скачать резюме кандидата с сайта университета. Код ответа - " + HTTPОтвет.КодСостояния);
			Возврат;
		КонецЕсли;
		
		Результат = HTTPОтвет.ПолучитьТелоКакСтроку(); 	
		ОтветJSON = ОбщегоНазначенияКлиент.ПрочитатьЗначениеИзJSON(Результат);
		
		Если ПустаяСтрока(ОтветJSON.resume_file) Тогда
			ОбщегоНазначенияКлиент.ВывестиСообщение("Кандидат не загрузил резюме");
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанныеФайла = Base64Значение(ОтветJSON.resume_file);
		
		Режим = РежимДиалогаВыбораФайла.Сохранение; 
		ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(Режим);              
		ДиалогСохраненияФайла.ПолноеИмяФайла = ОтветJSON.name_file; 
		ДиалогСохраненияФайла.МножественныйВыбор = Ложь; 
		ДиалогСохраненияФайла.Заголовок = "Выберите место сохранения резюме";
		
		МестоСохранения = Ждать ДиалогСохраненияФайла.ВыбратьАсинх();				
		Если МестоСохранения = Неопределено Тогда;
			Возврат;
		КонецЕсли;
		
		ОтветПользователя = Ждать ВопросАсинх("Сохранить резюме в регистре с файлами кандидатов?", РежимДиалогаВопрос.ДаНет,,, "Сохранить резюме в регистре"); 
		
		Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
			НазваниеФайла = Лев(Строка(Объект.СсылкаНаВакансию), 19) + Объект.НаименованиеВакансии + "(" + Формат(Объект.ДатаСозданияРезюме, "ДЛФ=ДД") + "-" + Формат(Объект.ДатаПоследнегоОбновленияРезюме, "ДЛФ=ДД") + ")";
			ЗаписатьФайлПДФВРегистр(ДвоичныеДанныеФайла, Объект.Ссылка, НазваниеФайла);	
		КонецЕсли;
			 
		ПолныйПутьКФайлу = МестоСохранения[0];
		Ждать ДвоичныеДанныеФайла.ЗаписатьАсинх(ПолныйПутьКФайлу);
		
		РасширениеФайла = СтрРазделить(ОтветJSON.name_file, ".", Ложь);
		РасширениеФайла = РасширениеФайла[РасширениеФайла.ВГраница()];
			
		Если РасширениеФайла = "pdf" Тогда
			КнопкиВопроса = Новый СписокЗначений;
			КнопкиВопроса.Добавить("ОткрытьЗдесь", "Открыть в 1С");
			КнопкиВопроса.Добавить("ОткрытьВБраузере", "Открыть в браузере");
			КнопкиВопроса.Добавить("Нет");
			
			ОтветПользователя = Ждать ВопросАсинх("Открыть резюме после скачивания?", КнопкиВопроса,, "Нет", "Открыть резюме");
			Если ОтветПользователя = "ОткрытьЗдесь" Тогда
				ДокументPDF = Новый ДокументPDF();
				Ждать ДокументPDF.ПрочитатьАсинх(ПолныйПутьКФайлу);					
				ДокументPDF.Показать("Резюме кандидата - " + ОтветJSON.name_file);
			ИначеЕсли ОтветПользователя = "ОткрытьВБраузере" Тогда
				Ждать ЗапуститьПриложениеАсинх(ПолныйПутьКФайлу);
			КонецЕсли;
		Иначе
			ОтветПользователя = Ждать ВопросАсинх("Открыть резюме после скачивания?", РежимДиалогаВопрос.ДаНет,,, "Открыть резюме");
			Если ОтветПользователя = КодВозвратаДиалога.Да Тогда
				Ждать ЗапуститьПриложениеАсинх(ПолныйПутьКФайлу);	
			КонецЕсли;
		КонецЕсли;			
	Исключение
		ОбщегоНазначенияКлиент.ВывестиСообщение(ОписаниеОшибки());
	КонецПопытки;	

КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьНаименованиеВакансии(Вакансия)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Вакансия.НаименованиеВакансии КАК НаименованиеВакансии
		|ИЗ
		|	Документ.Вакансия КАК Вакансия
		|ГДЕ
		|	Вакансия.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Вакансия);	
	РезультатЗапроса = Запрос.Выполнить();	
	Выборка = РезультатЗапроса.Выбрать();	
	Выборка.Следующий();

	Возврат Выборка.НаименованиеВакансии;	

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеПриложения() 
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Если ТекПользователь.ИспользоватьСвоеПриложение Тогда
		ТипИспользуемогоПриложения = Перечисления.ТипыПриложенияХХ.Личное;
		НазваниеПриложения = ТекПользователь.НазваниеПриложенияХХ;
		ПочтаРазработчика = ТекПользователь.ПочтаРазработчикаХХ;;	
	Иначе
		ТипИспользуемогоПриложения = Перечисления.ТипыПриложенияХХ.Общее;
		НазваниеПриложения = Константы.НазваниеПриложенияХХ.Получить();
		ПочтаРазработчика = Константы.ПочтаРазработчикаХХ.Получить();
	КонецЕсли;

	ОтборПользователя = Новый Структура("Пользователь, ТипПриложения", ТекПользователь, ТипИспользуемогоПриложения);
	ТокенПользователя = РегистрыСведений.ТокеныПользователей.Получить(ОтборПользователя).Токен;
		
	ДанныеПриложения = Новый Структура;
	ДанныеПриложения.Вставить("ТокенПользователя", ТокенПользователя);
	ДанныеПриложения.Вставить("НазваниеПриложения", НазваниеПриложения);
	ДанныеПриложения.Вставить("ПочтаРазработчика", ПочтаРазработчика);
	        
	Возврат ДанныеПриложения;

КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьФайлПДФВРегистр(ДвоичныеДанные, Кандидат, ИмяФайла)

	НоваяЗапись = РегистрыСведений.ФайлыКандидатов.СоздатьМенеджерЗаписи();
	НоваяЗапись.Кандидат = Кандидат;
	НоваяЗапись.Наименование = ИмяФайла;
	НоваяЗапись.ИмяФайлаБезРасширения = ИмяФайла;
	НоваяЗапись.РасширениеФайла = ".pdf";
	
	РазмерФайлаВБайтах = ДвоичныеДанные.Размер();
	РазмерФайлаВКилобайтах = Окр(РазмерФайлаВБайтах / 1024, 1); 
	НоваяЗапись.РазмерФайла = РазмерФайлаВКилобайтах;
	
	НоваяЗапись.ФайлКандидата = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
	НоваяЗапись.Записать();
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВыбратьФотоКандидата()
		
	ПараметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов();
	ПараметрыДиалога.Заголовок = "Выберите фотографию кандидата";
	ПараметрыДиалога.Фильтр = "Фотография | *.png; *.jpg; *.jpeg; *.bmp";
	
	Результат = Ждать ПоместитьФайлНаСерверАсинх(,,, ПараметрыДиалога, УникальныйИдентификатор); 
	
	Если Результат <> Неопределено Тогда		
		Объект.ФотоКандидата = Результат.Адрес;
		Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьФотографиюИзРегистра(Кандидат)

	ДанныеФотографии = РегистрыСведений.ФотографииКандидатов.СоздатьМенеджерЗаписи();
	ДанныеФотографии.Кандидат = Кандидат;
	ДанныеФотографии.Прочитать();
	
	Если ДанныеФотографии.Выбран() Тогда
		ДанныеФотографии.Удалить();		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРегионГорода(Город)

	Возврат Город.Родитель.Наименование;	

КонецФункции

&НаКлиенте
Процедура ОбработатьКодОтвета(КодОтвета)

	Если КодОтвета = 404 Тогда
		ОбщегоНазначенияКлиент.ВывестиСообщение("Ссылка на скачивание вакансии устарела или у пользователя нет прав.");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


