                              
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения <> Неопределено Тогда 			
		ЗаполнениеМестаПроживания(ДанныеЗаполнения);				
		ЗаполнениеУровняОбразования(ДанныеЗаполнения);		
		ЗаполнениеТЧОпытРаботы(ДанныеЗаполнения);		
		ЗаполнениеТЧЗнанияЯзыков(ДанныеЗаполнения);
		ЗаполнениеТЧПодходящиеГрафикиРаботы(ДанныеЗаполнения);
		ЗаполнениеТЧПодходящиеТипыЗанятости(ДанныеЗаполнения);
		ЗаполнениеТЧКлючевыеНавыки(ДанныеЗаполнения);
		
	КонецЕсли;
	         
КонецПроцедуры  

Процедура ЗаполнениеМестаПроживания(ДанныеЗаполнения)
	
	Город = Справочники.Города.НайтиПоРеквизиту("ИдентификаторГородаХХ", ДанныеЗаполнения.ГородПроживания);
	Если Город.Пустая() Тогда
		// Если город не найден в справочнике то что то делаю
		Возврат;
	КонецЕсли;
	Регион = Город.Родитель.Наименование;
	
КонецПроцедуры

Процедура ЗаполнениеУровняОбразования(ДанныеЗаполнения)	
	
	//Для каждого ТекЭлемент Из Метаданные.Перечисления["УровниОбразования"].ЗначенияПеречисления  Цикл
	//    Если ТекЭлемент.Синоним = ДанныеЗаполнения.УровеньОбразованияКандидата["name"] Тогда
	//        Образование = Перечисления["УровниОбразования"][ТекЭлемент.Имя];
	//        Прервать;
	//    КонецЕсли;
	//КонецЦикла;
	Образование = Перечисления.УровниОбразования[СтрЗаменить(ТРег(ДанныеЗаполнения.УровеньОбразованияКандидата["name"])," ","")]
	
КонецПроцедуры

Процедура ЗаполнениеТЧОпытРаботы(ДанныеЗаполнения)

	ОпытРаботыВОрганизациях = ДанныеЗаполнения.ОпытРаботы; 
	
	Для Каждого Опыт Из ОпытРаботыВОрганизациях Цикл
		СтрокаТЧ = ОпытРаботы.Добавить();
		
		Если Опыт["area"] <> Неопределено Тогда 
			СтрокаТЧ.РасположениеОрганизации = Опыт["area"]["name"];
		КонецЕсли; 
		
		СтрокаТЧ.НазваниеОрганизации = Опыт["company"];
		СтрокаТЧ.СайтКомпании = Опыт["company_url"];
		
		Если Опыт["industry"] <> Неопределено Тогда
			СтрокаТЧ.ОтрасльКомпании = Опыт["industry"]["name"];
		КонецЕсли;
                                  
		СтрокаТЧ.НачалоРаботы = Дата(СтрЗаменить(Сред(Опыт["start"], 0, 10), "-", ""));
		
		Если Опыт["end"] <> Неопределено Тогда
			СтрокаТЧ.ОкончаниеРаботы = Дата(СтрЗаменить(Сред(Опыт["end"], 0, 10), "-", ""));
		КонецЕсли;
		
		СтрокаТЧ.Должность = Опыт["position"];		
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнениеТЧЗнанияЯзыков(ДанныеЗаполнения)
	
	СписокЯзыков = ДанныеЗаполнения.ЗнанияЯзыков;	
	Для Каждого Язык Из СписокЯзыков Цикл		
		СсылкаНаЯзык = Справочники.Языки.НайтиПоНаименованию(Язык["name"]);	
		
		Если СсылкаНаЯзык.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТЧ = ЗнанияЯзыков.Добавить(); 
		СтрокаТЧ.Язык = СсылкаНаЯзык;
		
		УровеньВладения = Язык["level"]["name"];
		
		Для каждого ТекЭлемент Из Метаданные.Перечисления["УровниЗнанийЯзыков"].ЗначенияПеречисления  Цикл
			Если ТекЭлемент.Синоним = УровеньВладения Тогда
				СтрокаТЧ.УровеньВладения = Перечисления["УровниЗнанийЯзыков"][ТекЭлемент.Имя];
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнениеТЧПодходящиеГрафикиРаботы(ДанныеЗаполнения)

	СписокПодходящихГрафиков = ДанныеЗаполнения.ПодходящиеГрафикиРаботы;
	
	Для Каждого График Из СписокПодходящихГрафиков Цикл
		СтрокаТЧ = ПодходящиеГрафикиРаботы.Добавить();
		ПодходящийГрафикРаботы = График["name"];
		Для каждого ТекЭлемент Из Метаданные.Перечисления["ГрафикиРаботы"].ЗначенияПеречисления  Цикл
			Если ТекЭлемент.Синоним = ПодходящийГрафикРаботы Тогда
				СтрокаТЧ.ГрафикРаботы = Перечисления["ГрафикиРаботы"][ТекЭлемент.Имя];
				Прервать;
			КонецЕсли;
		КонецЦикла;			
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнениеТЧПодходящиеТипыЗанятости(ДанныеЗаполнения)

	СписокПодходящихТиповЗанятости = ДанныеЗаполнения.ПодходящиеТипыЗанятости;
	
	Для Каждого ТипЗанятости Из СписокПодходящихТиповЗанятости Цикл
		СтрокаТЧ = ПодходящиеТипыЗанятости.Добавить();
		ПодходящийТипЗанятости = ТипЗанятости["name"];
		Для каждого ТекЭлемент Из Метаданные.Перечисления["ТипыЗанятости"].ЗначенияПеречисления  Цикл
			Если ТекЭлемент.Синоним = ПодходящийТипЗанятости Тогда
				СтрокаТЧ.ТипЗанятости = Перечисления["ТипыЗанятости"][ТекЭлемент.Имя];
				Прервать;
			КонецЕсли;
		КонецЦикла;			
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнениеТЧКлючевыеНавыки(ДанныеЗаполнения)
	
	СписокНавыков = ДанныеЗаполнения.КлючевыеНавыки;	
	Для Каждого Навык Из СписокНавыков Цикл		
		СтрокаТЧ = КлючевыеНавыки.Добавить();
		СтрокаТЧ.Навык = Навык; 		
	КонецЦикла;
	
КонецПроцедуры
